%table#cases_resultstable_table

  %th
    Name
  %th
    Score /5
  %th#cases_resultstable_table_column_bar
    Bar
  %th
    Prev #{@period.to_s} /5
  %th
    Growth
  %th
    Site Av
  / %th
  /   Recommendation
    

  - @table_hash.each_with_index do |(key, value), index|

    %tr
      %td.text-left-align
        / Name
        = Case.criteria_name(key)


      %td.cases_resultstable_cell_last5
        / Last 5 Average
        = value


      %td
        / Chart
        .cases_resultstable_chart_bar{"data-score" => value, id: "cases_resultstable_chart_bar_"+index.to_s, "data-category" => Case.criteria_category(key)}

      %td
        / Previous 5 to Last 5 Average
        - prev_av = Case.criteria_av_user(current_user, 5, 5, key)
        = prev_av


      / Growth cell
      - curr_av = value
      - growth = ((curr_av/prev_av)-1)*100
      = colorcoded_cell(growth,number_to_percentage(growth, precision: 0))

      / Diff from avareage cell
      - site_av = Case.criteria_av_global(key)
      - diff = value - site_av
      = colorcoded_cell(diff, site_av)
      
      / / Recommednation cell
      / = recommendation_cell(growth, diff)



  / %th
  /   Bottom Q Av
  / %th
  /   Top Q Av

  /     %td
  /       / average of top quartile
  /       - array = Case.all.map { |a| a.criteria(key) }
  /       - percentile = 0.75
  /       - topquart = array.sort[(array.length * percentile)..(array.length)]
  /       = (topquart.inject(0.0) { |sum, el| sum + el } / topquart.size).round(1)
  /     %td
  /       - array = Case.all.map { |a| a.criteria(key) }
  /       - percentile = 0.25
  /       - bottomquart = array.sort[0..(array.length * percentile)]
  /       = (bottomquart.inject(0.0) { |sum, el| sum + el } / bottomquart.size).round(1)
