
:javascript
  var map_index_user_profile_chart_activity_data = #{Case.user_activity_profile(@user)};


.map_index_user_profile_toggle.btn.btn-primary.btn-embossed{"data-user_id"=>@user.id}
  %i.icon-angle-down
  Show map





.row


  .span20
    .row
      %span#map_index_user_profile_avatar.fui-user
    .row
      .span
        = casecounts(@user).to_s + " cases"
    .row
      .span
        = @user.points_tally.to_s + " reputation"
    .row
      - if @user.last_online_at
        Last online
        = time_ago_in_words(@user.last_online_at)
        ago
      - else
        Never online

  .span40
    .row
      = @user.username

    .row
      - unless @user.university.blank?
        %span
          = image_tag "universities/" + @user.university.image, class: "application_userimage_small"
        %span
          = @user.university.name
    .row
      - unless @user.country.blank?
        %span
          = image_tag "countries/"+@user.country.code.to_s+".png", alt: @user.country.name, class: "application_userimage_small"
        %span
          = @user.country.name
    .row
      = @user.degree_level_in_words
    .row
      = @user.subject.name unless @user.subject.blank?
    .row
      - unless @user.languages.empty?
        - @user.languages.each do |users_item_language|
          = users_item_language.name
    .row
      - if Friendship.friends?(current_user, @user)
        &#8226; 
        = link_to("Remove as Contact", friendship_path(Friendship.friendship(current_user, @user)), method: :delete, confirm: "Are you sure you want to remove " + @user.username + " as a contact?")
      - else
        Not friends




.row
  .span30
    #map_index_user_profile_chart_activity







  .span13#map_index_user_profile_panel_actions.offset1.pull-right
    - if @user != current_user
      - if Friendship.friends?(current_user, @user)
        .row
          = link_to raw("<i class=icon-comment icon-white></i> Message"),"#", class: "map_index_user_profile_button_message btn btn-primary btn-embossed btn-small", "data-friend_id" => @user.id

        .row
          - unless @user.skype.blank?
            %a.btn.btm-small.btn-primary.btn-embossed{href: "skype:#{@user.skype}?call"}
              %span.fui-skype
              Skype
        .row
          %a.map_index_user_profile_button_event.btn.btn-primary.btn-embossed.btn-small{"data-friend_id" => @user.id.to_s}
            %i.icon-calendar.icon-white
            Schedule
        .row
          %a#map_index_user_profile_button_startcase.btn.btn-primary.btn-embossed.btn-small{ href:"/console?friend_id=" + @user.id.to_s}
            %i.icon-arrow-right.icon-white
            Start


      - elsif Friendship.requested?(@user, current_user)
        Request Pending

      - elsif Friendship.pending?(@user, current_user)

        Pending case partner request
        = link_to("Accept", accept_friendship_path(id: Friendship.friendship(current_user, @user), back_url: map_path), method: :put, class: "btn btn-primary btn-embossed btn-mini")
        = link_to("Reject", reject_friendship_path(id: Friendship.friendship(current_user, @user), back_url: map_path), method: :put, class: "btn btn-mini")

      - elsif !Friendship.exist?(current_user, @user)
        %a.map_index_user_profile_button_friendrequest.btn.btn-primary.btn-embossed.btn-small{"data-friend_id" => @user.id }
          %div
            %i.icon-comment.icon-white.icon-4x
          Send Friend Request




.row


  .span20
    .panel.dark.kill_left.map_index_user_profile_block_content

      .map_index_user_profile_block_title
        Recent Questions
      .map_index_user_profile_block_content_text
        - @user.questions.last(5).each do |user_question|
          .row.application_truncatable
            = link_to user_question.title, question_path(user_question)

  .span20
    .panel.dark.kill_left.map_index_user_profile_block_content

      .map_index_user_profile_block_title
        Recent Answers
      .map_index_user_profile_block_content_text
        - @user.answers.last(5).each do |user_answer|
          .row.application_truncatable
            = link_to user_answer.content_trunc, answer_path(user_answer)

  .span20

    .panel.dark.kill_left.map_index_user_profile_block_content

      .map_index_user_profile_block_title
        Recent Posts
      .map_index_user_profile_block_content_text
        - @user.posts.last(5).each do |user_post|
          .row.application_truncatable
            = user_post.content_trunc


.spacer10
.row
  #map_index_user_profile_chart_activity
.spacer50