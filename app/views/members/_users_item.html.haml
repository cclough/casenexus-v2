.map_index_users_item{'data-id' => users_item.id.to_s, 'data-lat' => users_item.lat.to_s, 'data-lng' => users_item.lng.to_s }



  .map_index_users_item_avatar
    = avatar_for(users_item, { link: 0, size: "large" })
    .map_index_users_item_university
      = users_item.university.name
  .map_index_users_item_info

    .map_index_users_item_user
      .map_index_users_item_username
        = users_item.username

      - unless users_item.last_online_at.blank?
        .map_index_users_item_onlinestatus

          .map_index_users_item_onlinestatus_icon{class: (if users_item.online_now? then "online_now" elsif users_item.online_earlier? then "online_earlier" else "online_not" end)}
          .map_index_users_item_onlinestatus_text
            last online
            = time_ago_in_words(users_item.last_online_at)
            ago

  - if params[:users_listtype] == "posts"
    .map_index_users_item_post
      .row
        = users_item.posts.last.content
      .row
        .pull-right
          = time_ago_in_words(users_item.posts.last.created_at)
          ago
  - else

    .map_index_users_item_activity{style: "background: url(#{Case.user_activity_chart(users_item)})no-repeat"}

    .map_index_users_item_actions

      - if users_item != current_user

        - if Friendship.friends?(current_user, users_item)

          = link_to raw("<i class=icon-comment icon-white></i>"),"#", class: "map_index_users_item_button_message btn btn-primary  btn-small", "data-friend_id" => users_item.id

          %a.map_index_users_item_button_event.btn.btn-primary.btn-small{"data-friend_id" => users_item.id.to_s}
            %i.icon-calendar.icon-white

          %a.map_index_users_item_button_startcase.btn.btn-primary.btn-small{ href:"/console?friend_id=" + users_item.id.to_s}
            %i.icon-arrow-right.icon-white

          - unless users_item.skype.blank?
            %a.map_index_users_item_button_skype.btn.btm-small.btn-primary{href: "skype:#{users_item.skype}?call"}
              %span.fui-skype


        - elsif Friendship.requested?(users_item, current_user)
          Request Pending

        - elsif Friendship.pending?(users_item, current_user)

          Pending case partner request
          = link_to("Accept", accept_friendship_path(id: Friendship.friendship(current_user, users_item), back_url: map_path), method: :put, class: "btn btn-primary  btn-mini")
          = link_to("Reject", reject_friendship_path(id: Friendship.friendship(current_user, users_item), back_url: map_path), method: :put, class: "btn btn-mini")

        - elsif !Friendship.exist?(current_user, users_item)
          %a.map_index_users_item_button_add.btn.btn-primary.btn-small{"data-friend_id" => users_item.id }
            %i.icon-plus.icon-white
            Add partner

        - unless users_item.linkedin.blank?
          %a.map_index_users_item_button_linkedin.btn.btn-primary.btn-small{href: "http://www.linkedin.com/"+users_item.linkedin}
            %span.fui-linkedin








  .map_index_users_stuff_pre_stuff

  
  .map_index_users_item_stuff
    .map_index_users_item_cases_recd
      = users_item.case_count_recd
      %span.map_index_users_item_cases_text
        rec'd
    .map_index_users_item_cases_givn
      = users_item.case_count_givn
      %span.map_index_users_item_cases_text
        given
    .map_index_users_item_cases_external
      = users_item.cases_external
      %span.map_index_users_item_cases_text
        ext.