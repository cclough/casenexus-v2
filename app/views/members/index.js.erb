// Re-renders the user list
$("#map_index_users").html("<%= escape_javascript(render("users")) %>")

window.map_index_users_item_bless();


var geoJson_precursor = "<%= escape_javascript(User.markers_geojson(@users).html_safe) %>";

var geoJson = $.parseJSON(geoJson_precursor);

// alert(geoJson);

map.markerLayer.setGeoJSON(geoJson);

// Switch to allow zoomed in state on page run
if (map_index_users_firstrun_switch == "on") {
  map_index_users_firstrun_switch = "off"
} else {
  // reset zoom out every time list is refreshed
  window.map.setZoom(2);
  offset = map.getSize().x * 0.25
  $("#map_index_map_zoomout").fadeOut("fast");
}

// open tooltip of first marker in list + make user item active - NB RUBY IF
<%- if @users.count > 0 %>
  var firstmarker_id = "<%= j(@users.first.id.to_s) %>";
  map.markerLayer.eachLayer(function(marker) {
      if (marker.feature.properties.id == firstmarker_id) {

        window.map.panTo(marker.getLatLng());
        var offset = map.getSize().x*0.25;
        map.panBy(new L.Point(-offset, 0), {animate: false});

        marker.openPopup();
        $("#map_index_map_zoomout").fadeIn("fast");
      }
  });
  $('.map_index_users_item').removeClass("map_index_users_item_info_active");
  $("#map_index_users").find('.map_index_users_item').first().addClass("map_index_users_item_info_active");
<%- end %>






map.markerLayer.on('layeradd', function(e) {
    var marker = e.layer,
        feature = marker.feature;


    var popupContent =  '<div class="map_index_map_popup">' +

                        '   <div class="map_index_map_popup_user">' +
                        '     <span><img src="/assets/universities/' + feature.properties.university_image + '" class="application_userimage_medium"></span>' +
                        '     <span>' + feature.properties.title + '</span>' +
                        '   </div>' +    

                        '   <div class="map_index_map_popup_cases">' +
                        '     <div class="map_index_users_item_cases_recd">' + 
                        '         <div class="map_index_users_item_cases_text">taken</div>' +
                                  feature.properties.cases_recd + 
                        '     </div>' +
                        '     <div class="map_index_users_item_cases_givn">' + 
                        '         <div class="map_index_users_item_cases_text">given</div>' +
                                  feature.properties.cases_givn + 
                        '     </div>' +
                        '     <div class="map_index_users_item_cases_external">' + 
                        '         <div class="map_index_users_item_cases_text">ext</div>' +
                                  feature.properties.cases_ext + 
                        '     </div>' +
                        '   </div>' +

                        '</div>';


    // marker.bindPopup(popupContent,{
    //     closeButton: false,
    //     // autoPan: false,
    //     closeOnClick: false,
    //     minWidth: 130
    // });

    marker.on('click', function () {
      // pan, offset pan, zoom and show button
      window.map.panTo(marker.getLatLng());
      var offset = map.getSize().x*0.25;
      map.panBy(new L.Point(-offset, 0), {animate: false});
      window.map.setZoom(15);
      $("#map_index_map_zoomout").fadeIn("fast");

      var popup = L.popup({
            closeButton: false,
            minWidth: 130,
            offset: new L.Point(0, -25)
            })
            .setLatLng(marker.getLatLng())
            .setContent(popupContent)
            .addTo(map);

    });

    marker.on('mouseover', function(e) {
      var popup = L.popup({
            closeButton: false,
            minWidth: 130,
            offset: new L.Point(0, -25)
            })
            .setLatLng(marker.getLatLng())
            .setContent(popupContent)
            .openOn(map);
    });
    marker.on('mouseout', function(e) {
        marker.closePopup();
    });

});


// map.markerLayer.on('click', function(marker) {
//     // e.layer.openPopup();
//     window.map.panTo(marker.layer.getLatLng());    
// });


// map.markerLayer.on('layeradd', function(e) {
//     var marker = e.layer,
//     feature = marker.feature;

//     // marker.setIcon(L.icon(feature.properties.icon));

// });



// Tooltips on Avatars
$(".application_avatar_icon").tooltip()

// Marker Click Trigger - Has to be in here because other wise does not load in time for list to be loaded
$('.map_index_users_item').click(function () {

  // change color on click
  $('.map_index_users_item').removeClass("map_index_users_item_info_active");
  $(this).addClass("map_index_users_item_info_active");

  // Marker interaction
  var target_id = $(this).attr('data-id');

  map.markerLayer.eachLayer(function(marker) {
      if (marker.feature.properties.id == target_id) {

          window.map.panTo(marker.getLatLng());

          //http://stackoverflow.com/questions/17758256/how-can-i-change-the-location-center-of-a-map-using-leaflet-api
          var offset = map.getSize().x*0.25;
          map.panBy(new L.Point(-offset, 0), {animate: false});

          window.map.setZoom(15);

          //marker.feature.properties.icon['iconUrl'] = 'http://localhost:3000/assets/markers/marker_new_active.png';
          //marker.feature.properties['marker-color'] = '#fff';
          // map.markerLayer.setGeoJSON(geoJson);

          marker.openPopup();
          $("#map_index_map_zoomout").fadeIn("fast");

      }
  });

});

// Users Item Cascade Fade
$(".map_index_users_item").each(function (i) {

  if ((i+1) == $(".map_index_users_item").length) {
    $(this).delay((i + 1) * 50).fadeIn(function(){
      $("#map_index_users .pagination").fadeIn(500); 
    });
  } else {
    $(this).delay((i + 1) * 50).fadeIn();
  }

});

// Truncate user item names
window.application_truncatables();


$("#map_index_users .pagination a").on("click", function() {
  $.getScript(this.href);
  return false;
});




